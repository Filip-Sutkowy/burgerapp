{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containters/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yHC0CXC,EAvCD,SAAAC,GAEZ,IAAMC,EAAc,GAEpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC9BA,EAAYE,KACV,CACEC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKhC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACvC,OAAGA,EAAGH,OAAS,EACN,0BACLI,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARb,KAQoB,gCAASI,EAAGH,QARhC,KAUA,OAKX,OACE,yBAAKW,UAAWC,IAAQC,OACtB,2CAAiBZ,GACjB,qCAAU,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,gCC5B9DC,E,4LAGFC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATKL,KAAKxB,MAAM8B,UACdF,EAASJ,KAAKxB,MAAM4B,OAAOrB,IAAI,SAAAR,GAAK,OAClC,kBAACmB,EAAD,CACAH,IAAKhB,EAAMgC,GACX9B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,WAKf,6BACGO,O,GAnBYI,aAwCNC,sBAfS,SAAAC,GACtB,MAAO,CACLN,OAAQM,EAAMnC,MAAM6B,OACpBE,QAASI,EAAMnC,MAAM+B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,SAII,SAAAS,GACzB,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,OAI3DM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.75836ebf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = props => {\n  \n  const ingredients = [];\n  \n  for(let ingredientName in props.ingredients) {\n    ingredients.push(\n      {\n        name: ingredientName,\n        amount: props.ingredients[ingredientName]\n      }\n    );\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    if(ig.amount > 0) {\n      return <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: '0 8px',\n          border: '1px solid #ccc',\n          padding: '5px'\n        }}\n        key={ig.name}>{ig.name} (<strong>{ig.amount}</strong>)</span>\n    } else {\n      return null;\n    }\n  });\n\n\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n    </div>\n  );\n};\n\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if( !this.props.loading ) {\n      orders = this.props.orders.map(order => (\n        <Order\n        key={order.id}\n        ingredients={order.ingredients}\n        price={order.price} />\n      ))\n    }\n\n    return (\n      <div>\n        {orders}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}