{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containters/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sFC0CXC,EAvCD,SAAAC,GAEZ,IAAMC,EAAc,GAEpB,IAAI,IAAIC,KAAkBF,EAAMC,YAC9BA,EAAYE,KACV,CACEC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKhC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACvC,OAAGA,EAAGH,OAAS,EACN,0BACLI,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARb,KAQoB,gCAASI,EAAGH,QARhC,KAUA,OAKX,OACE,yBAAKW,UAAWC,IAAQC,OACtB,2CAAiBZ,GACjB,qCAAU,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,+BCYrDC,sBAfS,SAAAC,GACtB,MAAO,CACLC,OAAQD,EAAMzB,MAAM0B,OACpBC,QAASF,EAAMzB,MAAM2B,QACrBC,MAAOH,EAAMI,KAAKD,MAClBE,OAAQL,EAAMI,KAAKC,SAII,SAAAC,GACzB,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OAAmBC,EAASE,IAAoBL,EAAOE,OAI3DN,CAA6CU,YAxC7C,SAACjC,GAAW,IAEjB+B,EAAkB/B,EAAlB+B,cAERG,oBAAU,WACRH,EAAc/B,EAAM2B,MAAO3B,EAAM6B,SAChC,CAACE,IAEJ,IAAIN,EAAS,kBAACU,EAAA,EAAD,MAUb,OATKnC,EAAM0B,UACTD,EAASzB,EAAMyB,OAAOlB,IAAI,SAAAR,GAAK,OAC7B,kBAACmB,EAAD,CACEH,IAAKhB,EAAMqC,GACXnC,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,WAKjB,6BACGI,IAoB8EY","file":"static/js/5.549e0e30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = props => {\n  \n  const ingredients = [];\n  \n  for(let ingredientName in props.ingredients) {\n    ingredients.push(\n      {\n        name: ingredientName,\n        amount: props.ingredients[ingredientName]\n      }\n    );\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    if(ig.amount > 0) {\n      return <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: '0 8px',\n          border: '1px solid #ccc',\n          padding: '5px'\n        }}\n        key={ig.name}>{ig.name} (<strong>{ig.amount}</strong>)</span>\n    } else {\n      return null;\n    }\n  });\n\n\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n    </div>\n  );\n};\n\n\nexport default order;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as actions from '../../store/actions/index';\n\nconst Orders = (props) => {\n\n  const { onFetchOrders } = props;\n\n  useEffect(() => {\n    onFetchOrders(props.token, props.userId);\n  }, [onFetchOrders]);\n\n  let orders = <Spinner />;\n  if (!props.loading) {\n    orders = props.orders.map(order => (\n      <Order\n        key={order.id}\n        ingredients={order.ingredients}\n        price={order.price} />\n    ))\n  }\n\n  return (\n    <div>\n      {orders}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}